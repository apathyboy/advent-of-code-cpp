# Copyright (c) 2020 Luca Cappa
# Released under the term specified in file LICENSE.txt
# SPDX short identifier: MIT
name: All Builds and Tests
on: [push]

jobs:
  job:
    name: ${{ matrix.os }}-build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-21.04'", windows-latest]
        include:
          - os: windows-latest
            triplet: x64-windows
            vcpkgCommitId: '699c8779f1b0feb4ed3564716d1ed31f69663ea6'
            cxx: cl.exe
            cc: cl.exe
          - os: "ubuntu-latest"
            triplet: x64-linux
            vcpkgCommitId: '699c8779f1b0feb4ed3564716d1ed31f69663ea6'
            cxx: clang++
            cc: clang

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - uses: lukka/get-cmake@latest

      - name: Set up Clang
        if: startsWith(matrix.os, 'ubuntu')
        uses: egor-tensin/setup-clang@v1
        with:
          version: latest
          platform: x64

      - name: Set Compiler Environment
        uses: lukka/set-shell-env@v1
        with:
          CXX: ${{ matrix.cxx }}
          CC: ${{ matrix.cc }}

      - name: Restore artifacts, or setup vcpkg (do not install any package)
        uses: lukka/run-vcpkg@v6
        id: runvcpkg
        with:
          setupOnly: true
          vcpkgDirectory: '${{ runner.workspace }}/build/vcpkg'
          vcpkgGitCommitId: '${{ matrix.vcpkgCommitId}}'
          # Ensure the cache key changes any time the content of the manifest file changes.
          appendedCacheKey: ${{ hashFiles( '**/vcpkg.json' ) }}
          vcpkgTriplet: ${{ matrix.triplet }}
      
      - name: Run CMake with vcpkg.json manifest
        uses: lukka/run-cmake@v3
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          useVcpkgToolchainFile: true
          buildDirectory: '${{ runner.workspace }}/build'
          cmakeAppendedArgs: '"-GNinja Multi-Config" -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet}} '
          buildWithCMake: true
      
      - name: Run CTest
        run: 'cd ${{ runner.workspace }}/build && ctest'
